

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sat Apr 11 18:03:56 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23  0000                     
    24                           ; Version 1.45
    25                           ; Generated 16/11/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataCOMRAM
    60  007E1B                     __pidataCOMRAM:
    61                           	opt stack 0
    62                           
    63                           ;initializer for _str_hello
    64  007E1B  4C                 	db	76
    65  007E1C  69                 	db	105
    66  007E1D  EA                 	db	234
    67  007E1E  6E                 	db	110
    68  007E1F  20                 	db	32
    69  007E20  63                 	db	99
    70  007E21  68                 	db	104
    71  007E22  F3                 	db	243
    72  007E23  20                 	db	32
    73  007E24  3F                 	db	63
    74  007E25  69                 	db	105
    75  007E26  EA                 	db	234
    76  007E27  6E                 	db	110
    77  007E28  21                 	db	33
    78  007E29  00                 	db	0
    79                           
    80                           ;initializer for _str_byebye
    81  007E2A  42                 	db	66
    82  007E2B  79                 	db	121
    83  007E2C  65                 	db	101
    84  007E2D  20                 	db	32
    85  007E2E  42                 	db	66
    86  007E2F  79                 	db	121
    87  007E30  65                 	db	101
    88  007E31  20                 	db	32
    89  007E32  21                 	db	33
    90  007E33  00                 	db	0
    91  0000                     _TRISEbits	set	3990
    92  0000                     _TRISD	set	3989
    93  0000                     _LATEbits	set	3981
    94  0000                     _LATD	set	3980
    95                           
    96                           ; #config settings
    97  0000                     
    98                           	psect	cinit
    99  007EA0                     __pcinit:
   100                           	opt stack 0
   101  007EA0                     start_initialization:
   102                           	opt stack 0
   103  007EA0                     __initialization:
   104                           	opt stack 0
   105                           
   106                           ; Initialize objects allocated to COMRAM (25 bytes)
   107                           ; load TBLPTR registers with __pidataCOMRAM
   108  007EA0  0E1B               	movlw	low __pidataCOMRAM
   109  007EA2  6EF6               	movwf	tblptrl,c
   110  007EA4  0E7E               	movlw	high __pidataCOMRAM
   111  007EA6  6EF7               	movwf	tblptrh,c
   112  007EA8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   113  007EAA  6EF8               	movwf	tblptru,c
   114  007EAC  EE00  F027         	lfsr	0,__pdataCOMRAM
   115  007EB0  EE10 F019          	lfsr	1,25
   116  007EB4                     copy_data0:
   117  007EB4  0009               	tblrd		*+
   118  007EB6  CFF5 FFEE          	movff	tablat,postinc0
   119  007EBA  50E5               	movf	postdec1,w,c
   120  007EBC  50E1               	movf	fsr1l,w,c
   121  007EBE  E1FA               	bnz	copy_data0
   122                           
   123                           ; Clear objects allocated to COMRAM (38 bytes)
   124  007EC0  EE00  F001         	lfsr	0,__pbssCOMRAM
   125  007EC4  0E26               	movlw	38
   126  007EC6                     clear_0:
   127  007EC6  6AEE               	clrf	postinc0,c
   128  007EC8  06E8               	decf	wreg,f,c
   129  007ECA  E1FD               	bnz	clear_0
   130  007ECC                     end_of_initialization:
   131                           	opt stack 0
   132  007ECC                     __end_of__initialization:
   133                           	opt stack 0
   134  007ECC  0100               	movlb	0
   135  007ECE  EFCE  F03F         	goto	_main	;jump to C main() function
   136                           tblptru	equ	0xFF8
   137                           tblptrh	equ	0xFF7
   138                           tblptrl	equ	0xFF6
   139                           tablat	equ	0xFF5
   140                           postinc0	equ	0xFEE
   141                           wreg	equ	0xFE8
   142                           postdec1	equ	0xFE5
   143                           fsr1l	equ	0xFE1
   144                           
   145                           	psect	bssCOMRAM
   146  000001                     __pbssCOMRAM:
   147                           	opt stack 0
   148  000001                     _buffer_RX:
   149                           	opt stack 0
   150  000001                     	ds	38
   151                           tblptru	equ	0xFF8
   152                           tblptrh	equ	0xFF7
   153                           tblptrl	equ	0xFF6
   154                           tablat	equ	0xFF5
   155                           postinc0	equ	0xFEE
   156                           wreg	equ	0xFE8
   157                           postdec1	equ	0xFE5
   158                           fsr1l	equ	0xFE1
   159                           
   160                           	psect	dataCOMRAM
   161  000027                     __pdataCOMRAM:
   162                           	opt stack 0
   163  000027                     _str_hello:
   164                           	opt stack 0
   165  000027                     	ds	15
   166  000036                     _str_byebye:
   167                           	opt stack 0
   168  000036                     	ds	10
   169                           tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           tblptrl	equ	0xFF6
   172                           tablat	equ	0xFF5
   173                           postinc0	equ	0xFEE
   174                           wreg	equ	0xFE8
   175                           postdec1	equ	0xFE5
   176                           fsr1l	equ	0xFE1
   177                           
   178                           	psect	cstackCOMRAM
   179  000040                     __pcstackCOMRAM:
   180                           	opt stack 0
   181  000040                     ??_Delay10KTCYx:
   182  000040                     Delay10TCYx@unit:
   183                           	opt stack 0
   184  000040                     Delay1KTCYx@unit:
   185                           	opt stack 0
   186                           
   187                           ; 1 bytes @ 0x0
   188  000040                     	ds	1
   189  000041                     lcd_gpio_driver@data_or_command:
   190                           	opt stack 0
   191  000041                     Delay10KTCYx@unit:
   192                           	opt stack 0
   193                           
   194                           ; 1 bytes @ 0x1
   195  000041                     	ds	1
   196  000042                     lcd_gpio_driver@DR_or_IR:
   197                           	opt stack 0
   198                           
   199                           ; 1 bytes @ 0x2
   200  000042                     	ds	1
   201  000043                     lcd_char@data:
   202                           	opt stack 0
   203  000043                     lcd_command@cmd:
   204                           	opt stack 0
   205                           
   206                           ; 1 bytes @ 0x3
   207  000043                     	ds	1
   208  000044                     lcd_cursor@col:
   209                           	opt stack 0
   210  000044                     lcd_string@str:
   211                           	opt stack 0
   212                           
   213                           ; 2 bytes @ 0x4
   214  000044                     	ds	1
   215  000045                     lcd_cursor@row:
   216                           	opt stack 0
   217                           
   218                           ; 1 bytes @ 0x5
   219  000045                     	ds	1
   220  000046                     lcd_cursor@i:
   221                           	opt stack 0
   222  000046                     lcd_string@i:
   223                           	opt stack 0
   224                           
   225                           ; 1 bytes @ 0x6
   226  000046                     	ds	1
   227  000047                     lcd_string_cursor@col:
   228                           	opt stack 0
   229                           
   230                           ; 1 bytes @ 0x7
   231  000047                     	ds	1
   232  000048                     lcd_string_cursor@str:
   233                           	opt stack 0
   234                           
   235                           ; 2 bytes @ 0x8
   236  000048                     	ds	2
   237  00004A                     lcd_string_cursor@row:
   238                           	opt stack 0
   239                           
   240                           ; 1 bytes @ 0xA
   241  00004A                     	ds	1
   242  00004B                     main@i:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0xB
   246  00004B                     	ds	1
   247                           tblptru	equ	0xFF8
   248                           tblptrh	equ	0xFF7
   249                           tblptrl	equ	0xFF6
   250                           tablat	equ	0xFF5
   251                           postinc0	equ	0xFEE
   252                           wreg	equ	0xFE8
   253                           postdec1	equ	0xFE5
   254                           fsr1l	equ	0xFE1
   255                           
   256 ;;
   257 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   258 ;;
   259 ;; *************** function _main *****************
   260 ;; Defined at:
   261 ;;		line 14 in file "../../main.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;  i               1   11[COMRAM] unsigned char 
   266 ;; Return value:  Size  Location     Type
   267 ;;                  1    wreg      void 
   268 ;; Registers used:
   269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   270 ;; Tracked objects:
   271 ;;		On entry : 0/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   275 ;;      Params:         0       0       0       0       0       0       0       0       0
   276 ;;      Locals:         1       0       0       0       0       0       0       0       0
   277 ;;      Temps:          0       0       0       0       0       0       0       0       0
   278 ;;      Totals:         1       0       0       0       0       0       0       0       0
   279 ;;Total ram usage:        1 bytes
   280 ;; Hardware stack levels required when called:    5
   281 ;; This function calls:
   282 ;;		_Delay10KTCYx
   283 ;;		_lcd_command
   284 ;;		_lcd_init
   285 ;;		_lcd_string
   286 ;;		_lcd_string_cursor
   287 ;; This function is called by:
   288 ;;		Startup code after reset
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           	psect	text0
   293  007F9C                     __ptext0:
   294                           	opt stack 0
   295  007F9C                     _main:
   296                           	opt stack 26
   297                           
   298                           ;main.c: 15: char i;
   299                           ;main.c: 18: lcd_init();
   300                           
   301                           ;incstack = 0
   302  007F9C  EC9F  F03F         	call	_lcd_init	;wreg free
   303                           
   304                           ;main.c: 20: lcd_string(str_hello);
   305  007FA0  0E27               	movlw	low _str_hello
   306  007FA2  6E44               	movwf	lcd_string@str,c
   307  007FA4  0E00               	movlw	high _str_hello
   308  007FA6  6E45               	movwf	lcd_string@str+1,c
   309  007FA8  EC84  F03F         	call	_lcd_string	;wreg free
   310                           
   311                           ;main.c: 21: for (i=0; i<96; i++) {
   312  007FAC  0E00               	movlw	0
   313  007FAE  6E4B               	movwf	main@i,c
   314  007FB0                     l951:
   315  007FB0  0E5F               	movlw	95
   316  007FB2  644B               	cpfsgt	main@i,c
   317  007FB4  D001               	goto	l89
   318  007FB6  D014               	goto	u140
   319  007FB8                     l89:
   320                           
   321                           ;main.c: 22: Delay10KTCYx(32); Delay10KTCYx(32); Delay10KTCYx(32); Delay10KTCYx(32); Del
      +                          ay10KTCYx(32);
   322  007FB8  0E20               	movlw	32
   323  007FBA  EC02  F03F         	call	_Delay10KTCYx
   324  007FBE  0E20               	movlw	32
   325  007FC0  EC02  F03F         	call	_Delay10KTCYx
   326  007FC4  0E20               	movlw	32
   327  007FC6  EC02  F03F         	call	_Delay10KTCYx
   328  007FCA  0E20               	movlw	32
   329  007FCC  EC02  F03F         	call	_Delay10KTCYx
   330  007FD0  0E20               	movlw	32
   331  007FD2  EC02  F03F         	call	_Delay10KTCYx
   332                           
   333                           ;main.c: 23: lcd_command(0x1C);
   334  007FD6  0E1C               	movlw	28
   335  007FD8  EC1A  F03F         	call	_lcd_command
   336  007FDC  2A4B               	incf	main@i,f,c
   337  007FDE  D7E8               	goto	l951
   338  007FE0                     u140:
   339                           
   340                           ;main.c: 24: }
   341                           ;main.c: 26: lcd_command(0x01);
   342  007FE0  0E01               	movlw	1
   343  007FE2  EC1A  F03F         	call	_lcd_command
   344                           
   345                           ;main.c: 27: lcd_command(0x02);
   346  007FE6  0E02               	movlw	2
   347  007FE8  EC1A  F03F         	call	_lcd_command
   348                           
   349                           ;main.c: 28: lcd_string_cursor(2,6,str_byebye);
   350  007FEC  0E06               	movlw	6
   351  007FEE  6E47               	movwf	lcd_string_cursor@col,c
   352  007FF0  0E36               	movlw	low _str_byebye
   353  007FF2  6E48               	movwf	lcd_string_cursor@str,c
   354  007FF4  0E00               	movlw	high _str_byebye
   355  007FF6  6E49               	movwf	lcd_string_cursor@str+1,c
   356  007FF8  0E02               	movlw	2
   357  007FFA  EC34  F03F         	call	_lcd_string_cursor
   358  007FFE                     l91:
   359  007FFE  D7FF               	goto	l91
   360  008000                     __end_of_main:
   361                           	opt stack 0
   362                           tblptru	equ	0xFF8
   363                           tblptrh	equ	0xFF7
   364                           tblptrl	equ	0xFF6
   365                           tablat	equ	0xFF5
   366                           postinc0	equ	0xFEE
   367                           wreg	equ	0xFE8
   368                           postdec1	equ	0xFE5
   369                           fsr1l	equ	0xFE1
   370                           
   371 ;; *************** function _lcd_string_cursor *****************
   372 ;; Defined at:
   373 ;;		line 13 in file "../../../src/lcd_string_cursor.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;  row             1    wreg     unsigned char 
   376 ;;  col             1    7[COMRAM] unsigned char 
   377 ;;  str             2    8[COMRAM] PTR unsigned char 
   378 ;;		 -> str_byebye(10), 
   379 ;; Auto vars:     Size  Location     Type
   380 ;;  row             1   10[COMRAM] unsigned char 
   381 ;; Return value:  Size  Location     Type
   382 ;;                  1    wreg      void 
   383 ;; Registers used:
   384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : 0/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   390 ;;      Params:         3       0       0       0       0       0       0       0       0
   391 ;;      Locals:         1       0       0       0       0       0       0       0       0
   392 ;;      Temps:          0       0       0       0       0       0       0       0       0
   393 ;;      Totals:         4       0       0       0       0       0       0       0       0
   394 ;;Total ram usage:        4 bytes
   395 ;; Hardware stack levels used:    1
   396 ;; Hardware stack levels required when called:    4
   397 ;; This function calls:
   398 ;;		_lcd_cursor
   399 ;;		_lcd_string
   400 ;; This function is called by:
   401 ;;		_main
   402 ;; This function uses a non-reentrant model
   403 ;;
   404                           
   405                           	psect	text1
   406  007E68                     __ptext1:
   407                           	opt stack 0
   408  007E68                     _lcd_string_cursor:
   409                           	opt stack 26
   410                           
   411                           ;incstack = 0
   412                           ;lcd_string_cursor@row stored from wreg
   413  007E68  6E4A               	movwf	lcd_string_cursor@row,c
   414                           
   415                           ;lcd_string_cursor.c: 15: lcd_cursor(row, col);
   416  007E6A  C047  F044         	movff	lcd_string_cursor@col,lcd_cursor@col
   417  007E6E  504A               	movf	lcd_string_cursor@row,w,c
   418  007E70  EC69  F03F         	call	_lcd_cursor
   419                           
   420                           ;lcd_string_cursor.c: 17: lcd_string(str);
   421  007E74  C048  F044         	movff	lcd_string_cursor@str,lcd_string@str
   422  007E78  C049  F045         	movff	lcd_string_cursor@str+1,lcd_string@str+1
   423  007E7C  EC84  F03F         	call	_lcd_string	;wreg free
   424  007E80  0012               	return		;funcret
   425  007E82                     __end_of_lcd_string_cursor:
   426                           	opt stack 0
   427                           tblptru	equ	0xFF8
   428                           tblptrh	equ	0xFF7
   429                           tblptrl	equ	0xFF6
   430                           tablat	equ	0xFF5
   431                           postinc0	equ	0xFEE
   432                           wreg	equ	0xFE8
   433                           postdec1	equ	0xFE5
   434                           fsr1l	equ	0xFE1
   435                           
   436 ;; *************** function _lcd_string *****************
   437 ;; Defined at:
   438 ;;		line 11 in file "../../../src/lcd_string.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;  str             2    4[COMRAM] PTR unsigned char 
   441 ;;		 -> str_byebye(10), str_hello(15), 
   442 ;; Auto vars:     Size  Location     Type
   443 ;;  i               1    6[COMRAM] unsigned char 
   444 ;; Return value:  Size  Location     Type
   445 ;;                  1    wreg      void 
   446 ;; Registers used:
   447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   448 ;; Tracked objects:
   449 ;;		On entry : 0/0
   450 ;;		On exit  : 0/0
   451 ;;		Unchanged: 0/0
   452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   453 ;;      Params:         2       0       0       0       0       0       0       0       0
   454 ;;      Locals:         1       0       0       0       0       0       0       0       0
   455 ;;      Temps:          0       0       0       0       0       0       0       0       0
   456 ;;      Totals:         3       0       0       0       0       0       0       0       0
   457 ;;Total ram usage:        3 bytes
   458 ;; Hardware stack levels used:    1
   459 ;; Hardware stack levels required when called:    3
   460 ;; This function calls:
   461 ;;		_lcd_char
   462 ;; This function is called by:
   463 ;;		_lcd_string_cursor
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           	psect	text2
   469  007F08                     __ptext2:
   470                           	opt stack 0
   471  007F08                     _lcd_string:
   472                           	opt stack 26
   473                           
   474                           ;lcd_string.c: 12: char i=0;
   475                           
   476                           ;incstack = 0
   477  007F08  0E00               	movlw	0
   478  007F0A  6E46               	movwf	lcd_string@i,c
   479                           
   480                           ;lcd_string.c: 14: while(str[i] != '\0')
   481  007F0C  D00C               	goto	l58
   482  007F0E                     
   483                           ;lcd_string.c: 15: lcd_char(str[i++]);
   484  007F0E  5046               	movf	lcd_string@i,w,c
   485  007F10  0D01               	mullw	1
   486  007F12  50F3               	movf	prodl,w,c
   487  007F14  2444               	addwf	lcd_string@str,w,c
   488  007F16  6ED9               	movwf	fsr2l,c
   489  007F18  50F4               	movf	prodh,w,c
   490  007F1A  2045               	addwfc	lcd_string@str+1,w,c
   491  007F1C  6EDA               	movwf	fsr2h,c
   492  007F1E  50DF               	movf	indf2,w,c
   493  007F20  EC27  F03F         	call	_lcd_char
   494  007F24  2A46               	incf	lcd_string@i,f,c
   495  007F26                     l58:
   496  007F26  5046               	movf	lcd_string@i,w,c
   497  007F28  0D01               	mullw	1
   498  007F2A  50F3               	movf	prodl,w,c
   499  007F2C  2444               	addwf	lcd_string@str,w,c
   500  007F2E  6ED9               	movwf	fsr2l,c
   501  007F30  50F4               	movf	prodh,w,c
   502  007F32  2045               	addwfc	lcd_string@str+1,w,c
   503  007F34  6EDA               	movwf	fsr2h,c
   504  007F36  50DF               	movf	indf2,w,c
   505  007F38  B4D8               	btfsc	status,2,c
   506  007F3A  0012               	return	
   507  007F3C  D7E8               	goto	l59
   508  007F3E                     __end_of_lcd_string:
   509                           	opt stack 0
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           prodh	equ	0xFF4
   515                           prodl	equ	0xFF3
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           postdec1	equ	0xFE5
   519                           fsr1l	equ	0xFE1
   520                           indf2	equ	0xFDF
   521                           fsr2h	equ	0xFDA
   522                           fsr2l	equ	0xFD9
   523                           status	equ	0xFD8
   524                           
   525 ;; *************** function _lcd_char *****************
   526 ;; Defined at:
   527 ;;		line 13 in file "../../../src/lcd_char.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;  data            1    wreg     unsigned char 
   530 ;; Auto vars:     Size  Location     Type
   531 ;;  data            1    3[COMRAM] unsigned char 
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   541 ;;      Params:         0       0       0       0       0       0       0       0       0
   542 ;;      Locals:         1       0       0       0       0       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0       0       0       0       0
   544 ;;      Totals:         1       0       0       0       0       0       0       0       0
   545 ;;Total ram usage:        1 bytes
   546 ;; Hardware stack levels used:    1
   547 ;; Hardware stack levels required when called:    2
   548 ;; This function calls:
   549 ;;		_Delay1KTCYx
   550 ;;		_lcd_gpio_driver
   551 ;; This function is called by:
   552 ;;		_lcd_string
   553 ;;		_lcd_char_cursor
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           	psect	text3
   558  007E4E                     __ptext3:
   559                           	opt stack 0
   560  007E4E                     _lcd_char:
   561                           	opt stack 26
   562                           
   563                           ;incstack = 0
   564                           ;lcd_char@data stored from wreg
   565  007E4E  6E43               	movwf	lcd_char@data,c
   566                           
   567                           ;lcd_char.c: 15: lcd_gpio_driver(1, data);
   568  007E50  C043  F041         	movff	lcd_char@data,lcd_gpio_driver@data_or_command
   569  007E54  0E01               	movlw	1
   570  007E56  EC41  F03F         	call	_lcd_gpio_driver
   571                           
   572                           ;lcd_char.c: 17: Delay1KTCYx(8);
   573  007E5A  0E08               	movlw	8
   574  007E5C  ECF2  F03E         	call	_Delay1KTCYx
   575                           
   576                           ;lcd_char.c: 18: Delay1KTCYx(8);
   577  007E60  0E08               	movlw	8
   578  007E62  ECF2  F03E         	call	_Delay1KTCYx
   579  007E66  0012               	return		;funcret
   580  007E68                     __end_of_lcd_char:
   581                           	opt stack 0
   582                           tblptru	equ	0xFF8
   583                           tblptrh	equ	0xFF7
   584                           tblptrl	equ	0xFF6
   585                           tablat	equ	0xFF5
   586                           prodh	equ	0xFF4
   587                           prodl	equ	0xFF3
   588                           postinc0	equ	0xFEE
   589                           wreg	equ	0xFE8
   590                           postdec1	equ	0xFE5
   591                           fsr1l	equ	0xFE1
   592                           indf2	equ	0xFDF
   593                           fsr2h	equ	0xFDA
   594                           fsr2l	equ	0xFD9
   595                           status	equ	0xFD8
   596                           
   597 ;; *************** function _lcd_cursor *****************
   598 ;; Defined at:
   599 ;;		line 11 in file "../../../src/lcd_cursor.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;  row             1    wreg     unsigned char 
   602 ;;  col             1    4[COMRAM] unsigned char 
   603 ;; Auto vars:     Size  Location     Type
   604 ;;  row             1    5[COMRAM] unsigned char 
   605 ;;  i               1    6[COMRAM] unsigned char 
   606 ;; Return value:  Size  Location     Type
   607 ;;                  1    wreg      void 
   608 ;; Registers used:
   609 ;;		wreg, status,2, status,0, cstack
   610 ;; Tracked objects:
   611 ;;		On entry : 0/0
   612 ;;		On exit  : 0/0
   613 ;;		Unchanged: 0/0
   614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   615 ;;      Params:         1       0       0       0       0       0       0       0       0
   616 ;;      Locals:         2       0       0       0       0       0       0       0       0
   617 ;;      Temps:          0       0       0       0       0       0       0       0       0
   618 ;;      Totals:         3       0       0       0       0       0       0       0       0
   619 ;;Total ram usage:        3 bytes
   620 ;; Hardware stack levels used:    1
   621 ;; Hardware stack levels required when called:    3
   622 ;; This function calls:
   623 ;;		_lcd_command
   624 ;; This function is called by:
   625 ;;		_lcd_string_cursor
   626 ;;		_lcd_char_cursor
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           	psect	text4
   631  007ED2                     __ptext4:
   632                           	opt stack 0
   633  007ED2                     _lcd_cursor:
   634                           	opt stack 26
   635                           
   636                           ;incstack = 0
   637                           ;lcd_cursor@row stored from wreg
   638  007ED2  6E45               	movwf	lcd_cursor@row,c
   639                           
   640                           ;lcd_cursor.c: 12: char i;
   641                           ;lcd_cursor.c: 14: lcd_command(0x02);
   642  007ED4  0E02               	movlw	2
   643  007ED6  EC1A  F03F         	call	_lcd_command
   644                           
   645                           ;lcd_cursor.c: 17: if(row >= 2)
   646  007EDA  0E01               	movlw	1
   647  007EDC  6445               	cpfsgt	lcd_cursor@row,c
   648  007EDE  D003               	goto	l26
   649                           
   650                           ;lcd_cursor.c: 18: lcd_command(0xC0);
   651  007EE0  0EC0               	movlw	192
   652  007EE2  EC1A  F03F         	call	_lcd_command
   653  007EE6                     l26:
   654                           
   655                           ;lcd_cursor.c: 19: if(col > 16)
   656  007EE6  0E10               	movlw	16
   657  007EE8  6444               	cpfsgt	lcd_cursor@col,c
   658  007EEA  D002               	goto	l27
   659                           
   660                           ;lcd_cursor.c: 20: col = 16 + 1;
   661  007EEC  0E11               	movlw	17
   662  007EEE  6E44               	movwf	lcd_cursor@col,c
   663  007EF0                     l27:
   664                           
   665                           ;lcd_cursor.c: 23: for(i=1; i<col; i++)
   666  007EF0  0E01               	movlw	1
   667  007EF2  6E46               	movwf	lcd_cursor@i,c
   668  007EF4  D004               	goto	l28
   669  007EF6                     
   670                           ;lcd_cursor.c: 24: lcd_command(0x14);
   671  007EF6  0E14               	movlw	20
   672  007EF8  EC1A  F03F         	call	_lcd_command
   673  007EFC  2A46               	incf	lcd_cursor@i,f,c
   674  007EFE                     l28:
   675  007EFE  5044               	movf	lcd_cursor@col,w,c
   676  007F00  5C46               	subwf	lcd_cursor@i,w,c
   677  007F02  B0D8               	btfsc	status,0,c
   678  007F04  0012               	return	
   679  007F06  D7F7               	goto	l29
   680  007F08                     __end_of_lcd_cursor:
   681                           	opt stack 0
   682                           tblptru	equ	0xFF8
   683                           tblptrh	equ	0xFF7
   684                           tblptrl	equ	0xFF6
   685                           tablat	equ	0xFF5
   686                           prodh	equ	0xFF4
   687                           prodl	equ	0xFF3
   688                           postinc0	equ	0xFEE
   689                           wreg	equ	0xFE8
   690                           postdec1	equ	0xFE5
   691                           fsr1l	equ	0xFE1
   692                           indf2	equ	0xFDF
   693                           fsr2h	equ	0xFDA
   694                           fsr2l	equ	0xFD9
   695                           status	equ	0xFD8
   696                           
   697 ;; *************** function _lcd_init *****************
   698 ;; Defined at:
   699 ;;		line 11 in file "../../../src/lcd_init.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;                  1    wreg      void 
   706 ;; Registers used:
   707 ;;		wreg, status,2, cstack
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   713 ;;      Params:         0       0       0       0       0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0       0       0       0       0
   716 ;;      Totals:         0       0       0       0       0       0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; Hardware stack levels required when called:    3
   720 ;; This function calls:
   721 ;;		_Delay10KTCYx
   722 ;;		_Delay1KTCYx
   723 ;;		_lcd_command
   724 ;; This function is called by:
   725 ;;		_main
   726 ;; This function uses a non-reentrant model
   727 ;;
   728                           
   729                           	psect	text5
   730  007F3E                     __ptext5:
   731                           	opt stack 0
   732  007F3E                     _lcd_init:
   733                           	opt stack 27
   734                           
   735                           ;lcd_init.c: 17: TRISD = 0x00;
   736                           
   737                           ;incstack = 0
   738  007F3E  0E00               	movlw	0
   739  007F40  6E95               	movwf	3989,c	;volatile
   740                           
   741                           ;lcd_init.c: 18: TRISEbits.RE0 = 0;
   742  007F42  9096               	bcf	3990,0,c	;volatile
   743                           
   744                           ;lcd_init.c: 19: TRISEbits.RE1 = 0;
   745  007F44  9296               	bcf	3990,1,c	;volatile
   746                           
   747                           ;lcd_init.c: 22: Delay10KTCYx(32);
   748  007F46  0E20               	movlw	32
   749  007F48  EC02  F03F         	call	_Delay10KTCYx
   750                           
   751                           ;lcd_init.c: 23: lcd_command(0b00110000);
   752  007F4C  0E30               	movlw	48
   753  007F4E  EC1A  F03F         	call	_lcd_command
   754                           
   755                           ;lcd_init.c: 24: Delay10KTCYx(32);
   756  007F52  0E20               	movlw	32
   757  007F54  EC02  F03F         	call	_Delay10KTCYx
   758                           
   759                           ;lcd_init.c: 25: lcd_command(0b00110000);
   760  007F58  0E30               	movlw	48
   761  007F5A  EC1A  F03F         	call	_lcd_command
   762                           
   763                           ;lcd_init.c: 26: Delay1KTCYx(8);
   764  007F5E  0E08               	movlw	8
   765  007F60  ECF2  F03E         	call	_Delay1KTCYx
   766                           
   767                           ;lcd_init.c: 27: Delay1KTCYx(8);
   768  007F64  0E08               	movlw	8
   769  007F66  ECF2  F03E         	call	_Delay1KTCYx
   770                           
   771                           ;lcd_init.c: 28: Delay1KTCYx(8);
   772  007F6A  0E08               	movlw	8
   773  007F6C  ECF2  F03E         	call	_Delay1KTCYx
   774                           
   775                           ;lcd_init.c: 29: Delay1KTCYx(8);
   776  007F70  0E08               	movlw	8
   777  007F72  ECF2  F03E         	call	_Delay1KTCYx
   778                           
   779                           ;lcd_init.c: 30: Delay1KTCYx(8);
   780  007F76  0E08               	movlw	8
   781  007F78  ECF2  F03E         	call	_Delay1KTCYx
   782                           
   783                           ;lcd_init.c: 31: lcd_command(0b00110000);
   784  007F7C  0E30               	movlw	48
   785  007F7E  EC1A  F03F         	call	_lcd_command
   786                           
   787                           ;lcd_init.c: 34: lcd_command(0b00111000);
   788  007F82  0E38               	movlw	56
   789  007F84  EC1A  F03F         	call	_lcd_command
   790                           
   791                           ;lcd_init.c: 35: lcd_command(0b00001100);
   792  007F88  0E0C               	movlw	12
   793  007F8A  EC1A  F03F         	call	_lcd_command
   794                           
   795                           ;lcd_init.c: 36: lcd_command(0b00000001);
   796  007F8E  0E01               	movlw	1
   797  007F90  EC1A  F03F         	call	_lcd_command
   798                           
   799                           ;lcd_init.c: 37: lcd_command(0b00000110);
   800  007F94  0E06               	movlw	6
   801  007F96  EC1A  F03F         	call	_lcd_command
   802  007F9A  0012               	return		;funcret
   803  007F9C                     __end_of_lcd_init:
   804                           	opt stack 0
   805                           tblptru	equ	0xFF8
   806                           tblptrh	equ	0xFF7
   807                           tblptrl	equ	0xFF6
   808                           tablat	equ	0xFF5
   809                           prodh	equ	0xFF4
   810                           prodl	equ	0xFF3
   811                           postinc0	equ	0xFEE
   812                           wreg	equ	0xFE8
   813                           postdec1	equ	0xFE5
   814                           fsr1l	equ	0xFE1
   815                           indf2	equ	0xFDF
   816                           fsr2h	equ	0xFDA
   817                           fsr2l	equ	0xFD9
   818                           status	equ	0xFD8
   819                           
   820 ;; *************** function _lcd_command *****************
   821 ;; Defined at:
   822 ;;		line 13 in file "../../../src/lcd_command.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  cmd             1    wreg     unsigned char 
   825 ;; Auto vars:     Size  Location     Type
   826 ;;  cmd             1    3[COMRAM] unsigned char 
   827 ;; Return value:  Size  Location     Type
   828 ;;                  1    wreg      void 
   829 ;; Registers used:
   830 ;;		wreg, cstack
   831 ;; Tracked objects:
   832 ;;		On entry : 0/0
   833 ;;		On exit  : 0/0
   834 ;;		Unchanged: 0/0
   835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   836 ;;      Params:         0       0       0       0       0       0       0       0       0
   837 ;;      Locals:         1       0       0       0       0       0       0       0       0
   838 ;;      Temps:          0       0       0       0       0       0       0       0       0
   839 ;;      Totals:         1       0       0       0       0       0       0       0       0
   840 ;;Total ram usage:        1 bytes
   841 ;; Hardware stack levels used:    1
   842 ;; Hardware stack levels required when called:    2
   843 ;; This function calls:
   844 ;;		_Delay1KTCYx
   845 ;;		_lcd_gpio_driver
   846 ;; This function is called by:
   847 ;;		_lcd_cursor
   848 ;;		_lcd_init
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text6
   854  007E34                     __ptext6:
   855                           	opt stack 0
   856  007E34                     _lcd_command:
   857                           	opt stack 26
   858                           
   859                           ;incstack = 0
   860                           ;lcd_command@cmd stored from wreg
   861  007E34  6E43               	movwf	lcd_command@cmd,c
   862                           
   863                           ;lcd_command.c: 15: lcd_gpio_driver(0, cmd);
   864  007E36  C043  F041         	movff	lcd_command@cmd,lcd_gpio_driver@data_or_command
   865  007E3A  0E00               	movlw	0
   866  007E3C  EC41  F03F         	call	_lcd_gpio_driver
   867                           
   868                           ;lcd_command.c: 17: Delay1KTCYx(8);
   869  007E40  0E08               	movlw	8
   870  007E42  ECF2  F03E         	call	_Delay1KTCYx
   871                           
   872                           ;lcd_command.c: 18: Delay1KTCYx(8);
   873  007E46  0E08               	movlw	8
   874  007E48  ECF2  F03E         	call	_Delay1KTCYx
   875  007E4C  0012               	return		;funcret
   876  007E4E                     __end_of_lcd_command:
   877                           	opt stack 0
   878                           tblptru	equ	0xFF8
   879                           tblptrh	equ	0xFF7
   880                           tblptrl	equ	0xFF6
   881                           tablat	equ	0xFF5
   882                           prodh	equ	0xFF4
   883                           prodl	equ	0xFF3
   884                           postinc0	equ	0xFEE
   885                           wreg	equ	0xFE8
   886                           postdec1	equ	0xFE5
   887                           fsr1l	equ	0xFE1
   888                           indf2	equ	0xFDF
   889                           fsr2h	equ	0xFDA
   890                           fsr2l	equ	0xFD9
   891                           status	equ	0xFD8
   892                           
   893 ;; *************** function _lcd_gpio_driver *****************
   894 ;; Defined at:
   895 ;;		line 12 in file "../../../src/lcd_gpio_driver.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;  DR_or_IR        1    wreg     unsigned char 
   898 ;;  data_or_comm    1    1[COMRAM] unsigned char 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;  DR_or_IR        1    2[COMRAM] unsigned char 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      void 
   903 ;; Registers used:
   904 ;;		wreg, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   910 ;;      Params:         1       0       0       0       0       0       0       0       0
   911 ;;      Locals:         1       0       0       0       0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0       0       0       0       0
   913 ;;      Totals:         2       0       0       0       0       0       0       0       0
   914 ;;Total ram usage:        2 bytes
   915 ;; Hardware stack levels used:    1
   916 ;; Hardware stack levels required when called:    1
   917 ;; This function calls:
   918 ;;		_Delay10TCYx
   919 ;; This function is called by:
   920 ;;		_lcd_char
   921 ;;		_lcd_command
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text7
   926  007E82                     __ptext7:
   927                           	opt stack 0
   928  007E82                     _lcd_gpio_driver:
   929                           	opt stack 26
   930                           
   931                           ;incstack = 0
   932                           ;lcd_gpio_driver@DR_or_IR stored from wreg
   933  007E82  6E42               	movwf	lcd_gpio_driver@DR_or_IR,c
   934                           
   935                           ;lcd_gpio_driver.c: 17: LATD = data_or_command;
   936  007E84  C041  FF8C         	movff	lcd_gpio_driver@data_or_command,3980	;volatile
   937                           
   938                           ;lcd_gpio_driver.c: 19: LATEbits.LATE0 = DR_or_IR;
   939  007E88  B042               	btfsc	lcd_gpio_driver@DR_or_IR,0,c
   940  007E8A  D002               	bra	u85
   941  007E8C  908D               	bcf	3981,0,c	;volatile
   942  007E8E  D001               	bra	u86
   943  007E90                     u85:
   944  007E90  808D               	bsf	3981,0,c	;volatile
   945  007E92                     u86:
   946                           
   947                           ;lcd_gpio_driver.c: 20: {
   948                           ;lcd_gpio_driver.c: 21: LATEbits.LATE1 = 1;
   949  007E92  828D               	bsf	3981,1,c	;volatile
   950                           
   951                           ;lcd_gpio_driver.c: 22: Delay10TCYx(8);
   952  007E94  0E08               	movlw	8
   953  007E96  ECFA  F03E         	call	_Delay10TCYx
   954                           
   955                           ;lcd_gpio_driver.c: 23: LATEbits.LATE1 = 0;
   956  007E9A  928D               	bcf	3981,1,c	;volatile
   957                           
   958                           ;lcd_gpio_driver.c: 24: }
   959                           ;lcd_gpio_driver.c: 25: LATEbits.LATE0 = 1;
   960  007E9C  808D               	bsf	3981,0,c	;volatile
   961  007E9E  0012               	return		;funcret
   962  007EA0                     __end_of_lcd_gpio_driver:
   963                           	opt stack 0
   964                           tblptru	equ	0xFF8
   965                           tblptrh	equ	0xFF7
   966                           tblptrl	equ	0xFF6
   967                           tablat	equ	0xFF5
   968                           prodh	equ	0xFF4
   969                           prodl	equ	0xFF3
   970                           postinc0	equ	0xFEE
   971                           wreg	equ	0xFE8
   972                           postdec1	equ	0xFE5
   973                           fsr1l	equ	0xFE1
   974                           indf2	equ	0xFDF
   975                           fsr2h	equ	0xFDA
   976                           fsr2l	equ	0xFD9
   977                           status	equ	0xFD8
   978                           
   979 ;; *************** function _Delay10TCYx *****************
   980 ;; Defined at:
   981 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\d10tcyx.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;  unit            1    wreg     unsigned char 
   984 ;; Auto vars:     Size  Location     Type
   985 ;;  unit            1    0[COMRAM] unsigned char 
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   995 ;;      Params:         0       0       0       0       0       0       0       0       0
   996 ;;      Locals:         1       0       0       0       0       0       0       0       0
   997 ;;      Temps:          0       0       0       0       0       0       0       0       0
   998 ;;      Totals:         1       0       0       0       0       0       0       0       0
   999 ;;Total ram usage:        1 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; This function calls:
  1002 ;;		Nothing
  1003 ;; This function is called by:
  1004 ;;		_lcd_gpio_driver
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text8
  1009  007DF4                     __ptext8:
  1010                           	opt stack 0
  1011  007DF4                     _Delay10TCYx:
  1012                           	opt stack 26
  1013                           
  1014                           ;incstack = 0
  1015                           ;Delay10TCYx@unit stored from wreg
  1016  007DF4  6E40               	movwf	Delay10TCYx@unit,c
  1017  007DF6                     l303:
  1018  007DF6  0E03               	movlw	3
  1019  007DF8                     u157:
  1020  007DF8  2EE8               	decfsz	wreg,f,c
  1021  007DFA  D7FE               	bra	u157
  1022  007DFC  F000               	nop	
  1023  007DFE  2E40               	decfsz	Delay10TCYx@unit,f,c
  1024  007E00  D7FA               	goto	l303
  1025  007E02  0012               	return	
  1026  007E04                     __end_of_Delay10TCYx:
  1027                           	opt stack 0
  1028                           tblptru	equ	0xFF8
  1029                           tblptrh	equ	0xFF7
  1030                           tblptrl	equ	0xFF6
  1031                           tablat	equ	0xFF5
  1032                           prodh	equ	0xFF4
  1033                           prodl	equ	0xFF3
  1034                           postinc0	equ	0xFEE
  1035                           wreg	equ	0xFE8
  1036                           postdec1	equ	0xFE5
  1037                           fsr1l	equ	0xFE1
  1038                           indf2	equ	0xFDF
  1039                           fsr2h	equ	0xFDA
  1040                           fsr2l	equ	0xFD9
  1041                           status	equ	0xFD8
  1042                           
  1043 ;; *************** function _Delay1KTCYx *****************
  1044 ;; Defined at:
  1045 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\d1ktcyx.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  unit            1    wreg     unsigned char 
  1048 ;; Auto vars:     Size  Location     Type
  1049 ;;  unit            1    0[COMRAM] unsigned char 
  1050 ;; Return value:  Size  Location     Type
  1051 ;;                  1    wreg      void 
  1052 ;; Registers used:
  1053 ;;		wreg
  1054 ;; Tracked objects:
  1055 ;;		On entry : 0/0
  1056 ;;		On exit  : 0/0
  1057 ;;		Unchanged: 0/0
  1058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1059 ;;      Params:         0       0       0       0       0       0       0       0       0
  1060 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1061 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1062 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1063 ;;Total ram usage:        1 bytes
  1064 ;; Hardware stack levels used:    1
  1065 ;; This function calls:
  1066 ;;		Nothing
  1067 ;; This function is called by:
  1068 ;;		_lcd_char
  1069 ;;		_lcd_command
  1070 ;;		_lcd_init
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           	psect	text9
  1075  007DE4                     __ptext9:
  1076                           	opt stack 0
  1077  007DE4                     _Delay1KTCYx:
  1078                           	opt stack 27
  1079                           
  1080                           ;incstack = 0
  1081                           ;Delay1KTCYx@unit stored from wreg
  1082  007DE4  6E40               	movwf	Delay1KTCYx@unit,c
  1083  007DE6                     l310:
  1084  007DE6  0EC8               	movlw	200
  1085  007DE8                     u167:
  1086  007DE8  D000               	nop2	
  1087  007DEA  2EE8               	decfsz	wreg,f,c
  1088  007DEC  D7FD               	bra	u167
  1089  007DEE  2E40               	decfsz	Delay1KTCYx@unit,f,c
  1090  007DF0  D7FA               	goto	l310
  1091  007DF2  0012               	return	
  1092  007DF4                     __end_of_Delay1KTCYx:
  1093                           	opt stack 0
  1094                           tblptru	equ	0xFF8
  1095                           tblptrh	equ	0xFF7
  1096                           tblptrl	equ	0xFF6
  1097                           tablat	equ	0xFF5
  1098                           prodh	equ	0xFF4
  1099                           prodl	equ	0xFF3
  1100                           postinc0	equ	0xFEE
  1101                           wreg	equ	0xFE8
  1102                           postdec1	equ	0xFE5
  1103                           fsr1l	equ	0xFE1
  1104                           indf2	equ	0xFDF
  1105                           fsr2h	equ	0xFDA
  1106                           fsr2l	equ	0xFD9
  1107                           status	equ	0xFD8
  1108                           
  1109 ;; *************** function _Delay10KTCYx *****************
  1110 ;; Defined at:
  1111 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\d10ktcyx.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  unit            1    wreg     unsigned char 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  unit            1    1[COMRAM] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1125 ;;      Params:         0       0       0       0       0       0       0       0       0
  1126 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1127 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1128 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1129 ;;Total ram usage:        2 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; This function calls:
  1132 ;;		Nothing
  1133 ;; This function is called by:
  1134 ;;		_lcd_init
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text10
  1140  007E04                     __ptext10:
  1141                           	opt stack 0
  1142  007E04                     _Delay10KTCYx:
  1143                           	opt stack 29
  1144                           
  1145                           ;incstack = 0
  1146                           ;Delay10KTCYx@unit stored from wreg
  1147  007E04  6E41               	movwf	Delay10KTCYx@unit,c
  1148  007E06                     l296:
  1149  007E06  0E0D               	movlw	13
  1150  007E08  6E40               	movwf	??_Delay10KTCYx& (0+255),c
  1151  007E0A  0EFC               	movlw	252
  1152  007E0C                     u177:
  1153  007E0C  2EE8               	decfsz	wreg,f,c
  1154  007E0E  D7FE               	bra	u177
  1155  007E10  2E40               	decfsz	??_Delay10KTCYx& (0+255),f,c
  1156  007E12  D7FC               	bra	u177
  1157  007E14  2E41               	decfsz	Delay10KTCYx@unit,f,c
  1158  007E16  D7F7               	goto	l296
  1159  007E18  0012               	return	
  1160  007E1A                     __end_of_Delay10KTCYx:
  1161                           	opt stack 0
  1162  0000                     tblptru	equ	0xFF8
  1163                           tblptrh	equ	0xFF7
  1164                           tblptrl	equ	0xFF6
  1165                           tablat	equ	0xFF5
  1166                           prodh	equ	0xFF4
  1167                           prodl	equ	0xFF3
  1168                           postinc0	equ	0xFEE
  1169                           wreg	equ	0xFE8
  1170                           postdec1	equ	0xFE5
  1171                           fsr1l	equ	0xFE1
  1172                           indf2	equ	0xFDF
  1173                           fsr2h	equ	0xFDA
  1174                           fsr2l	equ	0xFD9
  1175                           status	equ	0xFD8
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           prodh	equ	0xFF4
  1181                           prodl	equ	0xFF3
  1182                           postinc0	equ	0xFEE
  1183                           wreg	equ	0xFE8
  1184                           postdec1	equ	0xFE5
  1185                           fsr1l	equ	0xFE1
  1186                           indf2	equ	0xFDF
  1187                           fsr2h	equ	0xFDA
  1188                           fsr2l	equ	0xFD9
  1189                           status	equ	0xFD8
  1190                           
  1191                           	psect	rparam
  1192  0000                     tblptru	equ	0xFF8
  1193                           tblptrh	equ	0xFF7
  1194                           tblptrl	equ	0xFF6
  1195                           tablat	equ	0xFF5
  1196                           prodh	equ	0xFF4
  1197                           prodl	equ	0xFF3
  1198                           postinc0	equ	0xFEE
  1199                           wreg	equ	0xFE8
  1200                           postdec1	equ	0xFE5
  1201                           fsr1l	equ	0xFE1
  1202                           indf2	equ	0xFDF
  1203                           fsr2h	equ	0xFDA
  1204                           fsr2l	equ	0xFD9
  1205                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        25
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      75
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_string_cursor@str	PTR unsigned char  size(2) Largest target is 10
		 -> str_byebye(COMRAM[10]), 

    lcd_string@str	PTR unsigned char  size(2) Largest target is 15
		 -> str_byebye(COMRAM[10]), str_hello(COMRAM[15]), 


Critical Paths under _main in COMRAM

    _main->_lcd_string_cursor
    _lcd_string_cursor->_lcd_cursor
    _lcd_string_cursor->_lcd_string
    _lcd_string->_lcd_char
    _lcd_char->_lcd_gpio_driver
    _lcd_cursor->_lcd_command
    _lcd_init->_lcd_command
    _lcd_command->_lcd_gpio_driver
    _lcd_gpio_driver->_Delay10TCYx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    2367
                                             11 COMRAM     1     1      0
                       _Delay10KTCYx
                        _lcd_command
                           _lcd_init
                         _lcd_string
                  _lcd_string_cursor
 ---------------------------------------------------------------------------------
 (1) _lcd_string_cursor                                    4     1      3    1227
                                              7 COMRAM     4     1      3
                         _lcd_cursor
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _lcd_string                                           3     1      2     504
                                              4 COMRAM     3     1      2
                           _lcd_char
 ---------------------------------------------------------------------------------
 (3) _lcd_char                                             1     1      0     262
                                              3 COMRAM     1     1      0
                        _Delay1KTCYx
                    _lcd_gpio_driver
 ---------------------------------------------------------------------------------
 (2) _lcd_cursor                                           3     2      1     505
                                              4 COMRAM     3     2      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0     306
                       _Delay10KTCYx
                        _Delay1KTCYx
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          1     1      0     262
                                              3 COMRAM     1     1      0
                        _Delay1KTCYx
                    _lcd_gpio_driver
 ---------------------------------------------------------------------------------
 (4) _lcd_gpio_driver                                      2     1      1     218
                                              1 COMRAM     2     1      1
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (5) _Delay10TCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay10KTCYx
   _lcd_command
     _Delay1KTCYx
     _lcd_gpio_driver
       _Delay10TCYx
   _lcd_init
     _Delay10KTCYx
     _Delay1KTCYx
     _lcd_command
       _Delay1KTCYx
       _lcd_gpio_driver
         _Delay10TCYx
   _lcd_string
     _lcd_char
       _Delay1KTCYx
       _lcd_gpio_driver
         _Delay10TCYx
   _lcd_string_cursor
     _lcd_cursor
       _lcd_command
         _Delay1KTCYx
         _lcd_gpio_driver
           _Delay10TCYx
     _lcd_string
       _lcd_char
         _Delay1KTCYx
         _lcd_gpio_driver
           _Delay10TCYx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      C      4B       1       78.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B      20        0.0%
DATA                 0      0      4B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sat Apr 11 18:03:56 2020

                  lcd_char@data 0043  lcd_gpio_driver@data_or_command 0041                              l26 7EE6  
                            l27 7EF0                              l28 7EFE                              l29 7EF6  
                            l58 7F26                              l59 7F0E                              l91 7FFE  
                            l89 7FB8                              u85 7E90                              u86 7E92  
                           l310 7DE6                             l303 7DF6                             l296 7E06  
                           l951 7FB0                             u140 7FE0                             u157 7DF8  
                           u167 7DE8                             u177 7E0C                    __CFG_BOR$OFF 000000  
                           wreg 000FE8                     lcd_cursor@i 0046      __size_of_lcd_string_cursor 001A  
                  __CFG_WDT$OFF 000000                            _LATD 000F8C                            _main 7F9C  
                          indf2 000FDF                            fsr1l 000FE1                            fsr2l 000FD9  
                          prodh 000FF4                            prodl 000FF3                            start 0000  
                   lcd_string@i 0046                   __CFG_MCLRE$ON 000000                    ___param_bank 000000  
                   _Delay10TCYx 7DF4                     _Delay1KTCYx 7DE4                   __CFG_PLLDIV$2 000000  
                         ?_main 0040                           _TRISD 000F95           __size_of_Delay10KTCYx 0016  
                         main@i 004B                           tablat 000FF5                           status 000FD8  
                 lcd_cursor@col 0044                   lcd_cursor@row 0045            lcd_string_cursor@col 0047  
          lcd_string_cursor@row 004A                 __initialization 7EA0            lcd_string_cursor@str 0048  
                  __end_of_main 8000                    _Delay10KTCYx 7E04                          ??_main 004B  
                 __activetblptr 000000                  lcd_command@cmd 0043                __end_of_lcd_char 7E68  
              __end_of_lcd_init 7F9C            __size_of_lcd_command 001A                          clear_0 7EC6  
                  __pdataCOMRAM 0027                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                   lcd_string@str 0044                      __accesstop 0060  
       __end_of__initialization 7ECC                   ___rparam_used 000001                  __pcstackCOMRAM 0040  
       lcd_gpio_driver@DR_or_IR 0042        __size_of_lcd_gpio_driver 001E                    ?_Delay10TCYx 0040  
                  ?_Delay1KTCYx 0040                      _lcd_cursor 7ED2                       ?_lcd_char 0040  
                    _lcd_string 7F08                       ?_lcd_init 0040                         __Hparam 0000  
                       __Lparam 0000                         __pcinit 7EA0                 Delay10TCYx@unit 0040  
                       __ramtop 0800                         __ptext0 7F9C                         __ptext1 7E68  
                       __ptext2 7F08                         __ptext3 7E4E                         __ptext4 7ED2  
                       __ptext5 7F3E                         __ptext6 7E34                         __ptext7 7E82  
                       __ptext8 7DF4                         __ptext9 7DE4                      ??_lcd_char 0043  
                    ??_lcd_init 0044               ??_lcd_gpio_driver 0042            end_of_initialization 7ECC  
                       postdec1 000FE5                         postinc0 000FEE                     ?_lcd_cursor 0044  
                     _TRISEbits 000F96                     ?_lcd_string 0044                   ??_lcd_command 0043  
                    _str_byebye 0036            __size_of_Delay10TCYx 0010                   __pidataCOMRAM 7E1B  
          __size_of_Delay1KTCYx 0010             start_initialization 7EA0             __size_of_lcd_cursor 0036  
           __end_of_lcd_command 7E4E             __size_of_lcd_string 0036                     __pbssCOMRAM 0001  
               Delay1KTCYx@unit 0040               __size_of_lcd_char 001A               __size_of_lcd_init 005E  
                 ?_Delay10KTCYx 0040                       _buffer_RX 0001                 _lcd_gpio_driver 7E82  
                      _LATEbits 000F8D                     _lcd_command 7E34                  ??_Delay10KTCYx 0040  
                     _str_hello 0027                    ??_lcd_cursor 0045                Delay10KTCYx@unit 0041  
                  ??_lcd_string 0046                       copy_data0 7EB4                        __Hrparam 0000  
                      __Lrparam 0000         __end_of_lcd_gpio_driver 7EA0              __end_of_lcd_cursor 7F08  
            __end_of_lcd_string 7F3E                        __ptext10 7E04                        _lcd_char 7E4E  
                      _lcd_init 7F3E               _lcd_string_cursor 7E68                   __size_of_main 0064  
            ?_lcd_string_cursor 0047                   ??_Delay10TCYx 0040             ??_lcd_string_cursor 004A  
                 ??_Delay1KTCYx 0040           __CFG_CPUDIV$OSC2_PLL3 000000       __end_of_lcd_string_cursor 7E82  
          __end_of_Delay10KTCYx 7E1A                ?_lcd_gpio_driver 0041             __end_of_Delay10TCYx 7E04  
           __end_of_Delay1KTCYx 7DF4              __CFG_FOSC$HSPLL_HS 000000                    ?_lcd_command 0040  
