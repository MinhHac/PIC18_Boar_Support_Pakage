

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Apr 15 18:50:35 2020

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC18F4550 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     _LATD	set	3980
    56  0000                     _LATEbits	set	3981
    57  0000                     _TRISD	set	3989
    58  0000                     _TRISEbits	set	3990
    59  0000                     _PORTBbits	set	3969
    60  0000                     _LATBbits	set	3978
    61  0000                     _ADCON1	set	4033
    62  0000                     _TRISBbits	set	3987
    63                           
    64                           	psect	smallconst
    65  000800                     __psmallconst:
    66                           	opt stack 0
    67  000800  00                 	db	0
    68  000801                     STR_1:
    69  000801  20                 	db	32
    70  000802  4D                 	db	77	;'M'
    71  000803  49                 	db	73	;'I'
    72  000804  4E                 	db	78	;'N'
    73  000805  48                 	db	72	;'H'
    74  000806  20                 	db	32
    75  000807  48                 	db	72	;'H'
    76  000808  41                 	db	65	;'A'
    77  000809  43                 	db	67	;'C'
    78  00080A  20                 	db	32
    79  00080B  48                 	db	72	;'H'
    80  00080C  4F                 	db	79	;'O'
    81  00080D  00                 	db	0
    82                           
    83                           ; #config settings
    84  00080E  00                 	db	0	; dummy byte at the end
    85  0000                     
    86                           	psect	cinit
    87  0008FE                     __pcinit:
    88                           	opt stack 0
    89  0008FE                     start_initialization:
    90                           	opt stack 0
    91  0008FE                     __initialization:
    92                           	opt stack 0
    93                           
    94                           ; Clear objects allocated to BITCOMRAM (1 bytes)
    95  0008FE  6A2C               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
    96                           
    97                           ; Clear objects allocated to COMRAM (38 bytes)
    98  000900  EE00  F001         	lfsr	0,__pbssCOMRAM
    99  000904  0E26               	movlw	38
   100  000906                     clear_0:
   101  000906  6AEE               	clrf	postinc0,c
   102  000908  06E8               	decf	wreg,f,c
   103  00090A  E1FD               	bnz	clear_0
   104  00090C                     end_of_initialization:
   105                           	opt stack 0
   106  00090C                     __end_of__initialization:
   107                           	opt stack 0
   108  00090C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   109  00090E  6EF8               	movwf	tblptru,c
   110  000910  0E08               	movlw	high __Lsmallconst
   111  000912  6EF7               	movwf	tblptrh,c
   112  000914  0100               	movlb	0
   113  000916  EF08  F004         	goto	_main	;jump to C main() function
   114                           tblptru	equ	0xFF8
   115                           tblptrh	equ	0xFF7
   116                           postinc0	equ	0xFEE
   117                           wreg	equ	0xFE8
   118                           
   119                           	psect	bitbssCOMRAM
   120  000160                     __pbitbssCOMRAM:
   121                           	opt stack 0
   122  000160                     main@b:
   123                           	opt stack 0
   124  000160                     	ds	1
   125  000161                     main@a:
   126                           	opt stack 0
   127  000161                     	ds	1
   128                           tblptru	equ	0xFF8
   129                           tblptrh	equ	0xFF7
   130                           postinc0	equ	0xFEE
   131                           wreg	equ	0xFE8
   132                           
   133                           	psect	bssCOMRAM
   134  000001                     __pbssCOMRAM:
   135                           	opt stack 0
   136  000001                     _buffer_RX:
   137                           	opt stack 0
   138  000001                     	ds	38
   139                           tblptru	equ	0xFF8
   140                           tblptrh	equ	0xFF7
   141                           postinc0	equ	0xFEE
   142                           wreg	equ	0xFE8
   143                           
   144                           	psect	cstackCOMRAM
   145  000027                     __pcstackCOMRAM:
   146                           	opt stack 0
   147  000027                     ??_Delay10KTCYx:
   148  000027                     Delay10TCYx@unit:
   149                           	opt stack 0
   150  000027                     Delay1KTCYx@unit:
   151                           	opt stack 0
   152                           
   153                           ; 1 bytes @ 0x0
   154  000027                     	ds	1
   155  000028                     lcd_sendCommand@command:
   156                           	opt stack 0
   157  000028                     Delay10KTCYx@unit:
   158                           	opt stack 0
   159                           
   160                           ; 1 bytes @ 0x1
   161  000028                     	ds	1
   162  000029                     lcd_sendChar@data:
   163                           	opt stack 0
   164                           
   165                           ; 1 bytes @ 0x2
   166  000029                     	ds	1
   167  00002A                     lcd_sendString@str:
   168                           	opt stack 0
   169                           
   170                           ; 2 bytes @ 0x3
   171  00002A                     	ds	2
   172  00002C                     tblptru	equ	0xFF8
   173                           tblptrh	equ	0xFF7
   174                           postinc0	equ	0xFEE
   175                           wreg	equ	0xFE8
   176                           
   177                           ; 1 bytes @ 0x5
   178 ;;
   179 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   180 ;;
   181 ;; *************** function _main *****************
   182 ;; Defined at:
   183 ;;		line 13 in file "../main.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;		None
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   192 ;; Tracked objects:
   193 ;;		On entry : 0/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   197 ;;      Params:         0       0       0       0       0       0       0       0       0
   198 ;;      Locals:         0       0       0       0       0       0       0       0       0
   199 ;;      Temps:          0       0       0       0       0       0       0       0       0
   200 ;;      Totals:         0       0       0       0       0       0       0       0       0
   201 ;;Total ram usage:        0 bytes
   202 ;; Hardware stack levels required when called:    4
   203 ;; This function calls:
   204 ;;		_Delay1KTCYx
   205 ;;		_lcd_init
   206 ;;		_lcd_sendCommand
   207 ;;		_lcd_sendString
   208 ;; This function is called by:
   209 ;;		Startup code after reset
   210 ;; This function uses a non-reentrant model
   211 ;;
   212                           
   213                           	psect	text0
   214  000810                     __ptext0:
   215                           	opt stack 0
   216  000810                     _main:
   217                           	opt stack 27
   218                           
   219                           ;main.c: 14: TRISBbits.TRISB0 = 1; TRISBbits.TRISB1 = 1; ADCON1=0x0E;;
   220                           
   221                           ;incstack = 0
   222  000810  8093               	bsf	3987,0,c	;volatile
   223  000812  8293               	bsf	3987,1,c	;volatile
   224  000814  0E0E               	movlw	14
   225  000816  6EC1               	movwf	4033,c	;volatile
   226                           
   227                           ;main.c: 15: lcd_init();
   228  000818  EC2C  F004         	call	_lcd_init	;wreg free
   229                           
   230                           ;main.c: 16: TRISBbits.TRISB2 = 0;
   231  00081C  9493               	bcf	3987,2,c	;volatile
   232                           
   233                           ;main.c: 17: LATBbits.LATB2 = 0;
   234  00081E  948A               	bcf	3978,2,c	;volatile
   235                           
   236                           ;main.c: 19: static bit a = 0,b=0;
   237                           ;main.c: 20: Delay1KTCYx(8);
   238  000820  0E08               	movlw	8
   239  000822  ECA3  F004         	call	_Delay1KTCYx
   240  000826                     
   241                           ;main.c: 25: if(PORTBbits.RB0==1&&a==1){
   242  000826  B081               	btfsc	3969,0,c	;volatile
   243  000828  A22C               	btfss	main@a/(0+8),main@a& (0+7),c
   244  00082A  D008               	goto	l28
   245                           
   246                           ;main.c: 27: lcd_sendString(" MINH HAC HO");
   247  00082C  0E01               	movlw	low STR_1
   248  00082E  6E2A               	movwf	lcd_sendString@str,c
   249  000830  0E08               	movlw	high STR_1
   250  000832  6E2B               	movwf	lcd_sendString@str+1,c
   251  000834  EC6A  F004         	call	_lcd_sendString	;wreg free
   252                           
   253                           ;main.c: 28: a=0;
   254  000838  922C               	bcf	main@a/(0+8),main@a& (0+7),c
   255                           
   256                           ;main.c: 30: } else if(PORTBbits.RB0==0){
   257  00083A  D002               	goto	l30
   258  00083C                     l28:
   259  00083C  A081               	btfss	3969,0,c	;volatile
   260                           
   261                           ;main.c: 31: a = 1;
   262  00083E  822C               	bsf	main@a/(0+8),main@a& (0+7),c
   263  000840                     l30:
   264                           
   265                           ;main.c: 32: }
   266                           ;main.c: 34: if(PORTBbits.RB1==1&b==1){
   267  000840  B281               	btfsc	3969,1,c	;volatile
   268  000842  A02C               	btfss	main@b/(0+8),main@b& (0+7),c
   269  000844  D005               	goto	l31
   270                           
   271                           ;main.c: 35: lcd_sendCommand(0x01);
   272  000846  0E01               	movlw	1
   273  000848  EC8D  F004         	call	_lcd_sendCommand
   274                           
   275                           ;main.c: 36: b = 0;
   276  00084C  902C               	bcf	main@b/(0+8),main@b& (0+7),c
   277                           
   278                           ;main.c: 37: } else if(PORTBbits.RB1==0){
   279  00084E  D7EB               	goto	l27
   280  000850                     l31:
   281  000850  B281               	btfsc	3969,1,c	;volatile
   282  000852  D7E9               	goto	l27
   283                           
   284                           ;main.c: 38: b = 1;
   285  000854  802C               	bsf	main@b/(0+8),main@b& (0+7),c
   286  000856  D7E7               	goto	l27
   287  000858                     __end_of_main:
   288                           	opt stack 0
   289                           tblptru	equ	0xFF8
   290                           tblptrh	equ	0xFF7
   291                           postinc0	equ	0xFEE
   292                           wreg	equ	0xFE8
   293                           
   294 ;; *************** function _lcd_sendString *****************
   295 ;; Defined at:
   296 ;;		line 3 in file "../../../mlcd/src/lcd_sendString.c"
   297 ;; Parameters:    Size  Location     Type
   298 ;;  str             2    3[COMRAM] PTR unsigned char 
   299 ;;		 -> STR_1(13), 
   300 ;; Auto vars:     Size  Location     Type
   301 ;;		None
   302 ;; Return value:  Size  Location     Type
   303 ;;                  1    wreg      void 
   304 ;; Registers used:
   305 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   306 ;; Tracked objects:
   307 ;;		On entry : 0/0
   308 ;;		On exit  : 0/0
   309 ;;		Unchanged: 0/0
   310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   311 ;;      Params:         2       0       0       0       0       0       0       0       0
   312 ;;      Locals:         0       0       0       0       0       0       0       0       0
   313 ;;      Temps:          0       0       0       0       0       0       0       0       0
   314 ;;      Totals:         2       0       0       0       0       0       0       0       0
   315 ;;Total ram usage:        2 bytes
   316 ;; Hardware stack levels used:    1
   317 ;; Hardware stack levels required when called:    3
   318 ;; This function calls:
   319 ;;		_lcd_sendChar
   320 ;; This function is called by:
   321 ;;		_main
   322 ;;		_lcd_sendStringXY
   323 ;; This function uses a non-reentrant model
   324 ;;
   325                           
   326                           	psect	text1
   327  0008D4                     __ptext1:
   328                           	opt stack 0
   329  0008D4                     _lcd_sendString:
   330                           	opt stack 27
   331                           
   332                           ;lcd_sendString.c: 4: while(*str) {
   333                           
   334                           ;incstack = 0
   335  0008D4  D00A               	goto	l93
   336  0008D6                     
   337                           ;lcd_sendString.c: 5: lcd_sendChar(*str++);
   338  0008D6  C02A  FFF6         	movff	lcd_sendString@str,tblptrl
   339  0008DA  C02B  FFF7         	movff	lcd_sendString@str+1,tblptrh
   340  0008DE                     	if	0	;tblptru may be non-zero
   341  0008DE                     	endif
   342  0008DE                     	if	0	;tblptru may be non-zero
   343  0008DE                     	endif
   344  0008DE  0008               	tblrd		*
   345  0008E0  50F5               	movf	tablat,w,c
   346  0008E2  EC4F  F004         	call	_lcd_sendChar
   347  0008E6  4A2A               	infsnz	lcd_sendString@str,f,c
   348  0008E8  2A2B               	incf	lcd_sendString@str+1,f,c
   349  0008EA                     l93:
   350  0008EA  C02A  FFF6         	movff	lcd_sendString@str,tblptrl
   351  0008EE  C02B  FFF7         	movff	lcd_sendString@str+1,tblptrh
   352  0008F2                     	if	0	;tblptru may be non-zero
   353  0008F2                     	endif
   354  0008F2                     	if	0	;tblptru may be non-zero
   355  0008F2                     	endif
   356  0008F2  0008               	tblrd		*
   357  0008F4  50F5               	movf	tablat,w,c
   358  0008F6  0900               	iorlw	0
   359  0008F8  B4D8               	btfsc	status,2,c
   360  0008FA  0012               	return	
   361  0008FC  D7EC               	goto	l94
   362  0008FE                     __end_of_lcd_sendString:
   363                           	opt stack 0
   364                           tblptru	equ	0xFF8
   365                           tblptrh	equ	0xFF7
   366                           tblptrl	equ	0xFF6
   367                           tablat	equ	0xFF5
   368                           postinc0	equ	0xFEE
   369                           wreg	equ	0xFE8
   370                           status	equ	0xFD8
   371                           
   372 ;; *************** function _lcd_sendChar *****************
   373 ;; Defined at:
   374 ;;		line 3 in file "../../../mlcd/src/lcd_sendChar.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;  data            1    wreg     unsigned char 
   377 ;; Auto vars:     Size  Location     Type
   378 ;;  data            1    2[COMRAM] unsigned char 
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, status,2, status,0, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : 0/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   388 ;;      Params:         0       0       0       0       0       0       0       0       0
   389 ;;      Locals:         1       0       0       0       0       0       0       0       0
   390 ;;      Temps:          0       0       0       0       0       0       0       0       0
   391 ;;      Totals:         1       0       0       0       0       0       0       0       0
   392 ;;Total ram usage:        1 bytes
   393 ;; Hardware stack levels used:    1
   394 ;; Hardware stack levels required when called:    2
   395 ;; This function calls:
   396 ;;		_Delay1KTCYx
   397 ;;		_lcd_sendCommand
   398 ;; This function is called by:
   399 ;;		_lcd_sendString
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           	psect	text2
   404  00089E                     __ptext2:
   405                           	opt stack 0
   406  00089E                     _lcd_sendChar:
   407                           	opt stack 27
   408                           
   409                           ;incstack = 0
   410                           ;lcd_sendChar@data stored from wreg
   411  00089E  6E29               	movwf	lcd_sendChar@data,c
   412                           
   413                           ;lcd_sendChar.c: 4: if(data == '\r'){
   414  0008A0  0E0D               	movlw	13
   415  0008A2  1829               	xorwf	lcd_sendChar@data,w,c
   416  0008A4  A4D8               	btfss	status,2,c
   417  0008A6  D004               	goto	l73
   418                           
   419                           ;lcd_sendChar.c: 5: lcd_sendCommand(0x80);
   420  0008A8  0E80               	movlw	128
   421  0008AA  EC8D  F004         	call	_lcd_sendCommand
   422                           
   423                           ;lcd_sendChar.c: 6: }else if(data == '\n'){
   424  0008AE  0012               	return	
   425  0008B0                     l73:
   426  0008B0  0E0A               	movlw	10
   427  0008B2  1829               	xorwf	lcd_sendChar@data,w,c
   428  0008B4  A4D8               	btfss	status,2,c
   429  0008B6  D004               	goto	l75
   430                           
   431                           ;lcd_sendChar.c: 7: lcd_sendCommand(0xC0);
   432  0008B8  0EC0               	movlw	192
   433  0008BA  EC8D  F004         	call	_lcd_sendCommand
   434                           
   435                           ;lcd_sendChar.c: 8: }else{
   436  0008BE  0012               	return	
   437  0008C0                     l75:
   438                           
   439                           ;lcd_sendChar.c: 10: LATEbits.LATE0 = 1;
   440  0008C0  808D               	bsf	3981,0,c	;volatile
   441                           
   442                           ;lcd_sendChar.c: 11: LATD = data;
   443  0008C2  C029  FF8C         	movff	lcd_sendChar@data,3980	;volatile
   444                           
   445                           ;lcd_sendChar.c: 12: LATEbits.LATE1 = 1; __nop(); LATEbits.LATE1 = 0;;
   446  0008C6  828D               	bsf	3981,1,c	;volatile
   447  0008C8  F000               	nop	
   448  0008CA  928D               	bcf	3981,1,c	;volatile
   449                           
   450                           ;lcd_sendChar.c: 13: Delay1KTCYx(16);
   451  0008CC  0E10               	movlw	16
   452  0008CE  ECA3  F004         	call	_Delay1KTCYx
   453  0008D2  0012               	return	
   454  0008D4                     __end_of_lcd_sendChar:
   455                           	opt stack 0
   456                           tblptru	equ	0xFF8
   457                           tblptrh	equ	0xFF7
   458                           tblptrl	equ	0xFF6
   459                           tablat	equ	0xFF5
   460                           postinc0	equ	0xFEE
   461                           wreg	equ	0xFE8
   462                           status	equ	0xFD8
   463                           
   464 ;; *************** function _lcd_init *****************
   465 ;; Defined at:
   466 ;;		line 4 in file "../../../mlcd/src/lcd_init.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, status,2, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   480 ;;      Params:         0       0       0       0       0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0       0       0       0       0
   483 ;;      Totals:         0       0       0       0       0       0       0       0       0
   484 ;;Total ram usage:        0 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; Hardware stack levels required when called:    2
   487 ;; This function calls:
   488 ;;		_Delay10KTCYx
   489 ;;		_Delay10TCYx
   490 ;;		_Delay1KTCYx
   491 ;;		_lcd_sendCommand
   492 ;; This function is called by:
   493 ;;		_main
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497                           	psect	text3
   498  000858                     __ptext3:
   499                           	opt stack 0
   500  000858                     _lcd_init:
   501                           	opt stack 28
   502                           
   503                           ;lcd_init.c: 8: TRISEbits.RE1 = 0;
   504                           
   505                           ;incstack = 0
   506  000858  9296               	bcf	3990,1,c	;volatile
   507                           
   508                           ;lcd_init.c: 9: TRISEbits.RE0 = 0;
   509  00085A  9096               	bcf	3990,0,c	;volatile
   510                           
   511                           ;lcd_init.c: 10: TRISD = 0x00;
   512  00085C  0E00               	movlw	0
   513  00085E  6E95               	movwf	3989,c	;volatile
   514                           
   515                           ;lcd_init.c: 13: Delay10KTCYx(32);
   516  000860  0E20               	movlw	32
   517  000862  EC98  F004         	call	_Delay10KTCYx
   518                           
   519                           ;lcd_init.c: 14: lcd_sendCommand(0b00110000);
   520  000866  0E30               	movlw	48
   521  000868  EC8D  F004         	call	_lcd_sendCommand
   522                           
   523                           ;lcd_init.c: 15: Delay1KTCYx(40);
   524  00086C  0E28               	movlw	40
   525  00086E  ECA3  F004         	call	_Delay1KTCYx
   526                           
   527                           ;lcd_init.c: 16: lcd_sendCommand(0b00110000);
   528  000872  0E30               	movlw	48
   529  000874  EC8D  F004         	call	_lcd_sendCommand
   530                           
   531                           ;lcd_init.c: 17: Delay10TCYx(80);
   532  000878  0E50               	movlw	80
   533  00087A  ECAB  F004         	call	_Delay10TCYx
   534                           
   535                           ;lcd_init.c: 18: lcd_sendCommand(0b00110000);
   536  00087E  0E30               	movlw	48
   537  000880  EC8D  F004         	call	_lcd_sendCommand
   538                           
   539                           ;lcd_init.c: 21: lcd_sendCommand(0b00111000);
   540  000884  0E38               	movlw	56
   541  000886  EC8D  F004         	call	_lcd_sendCommand
   542                           
   543                           ;lcd_init.c: 22: lcd_sendCommand(0b00001100);
   544  00088A  0E0C               	movlw	12
   545  00088C  EC8D  F004         	call	_lcd_sendCommand
   546                           
   547                           ;lcd_init.c: 23: lcd_sendCommand(0b00000001);
   548  000890  0E01               	movlw	1
   549  000892  EC8D  F004         	call	_lcd_sendCommand
   550                           
   551                           ;lcd_init.c: 24: lcd_sendCommand(0b00000110);
   552  000896  0E06               	movlw	6
   553  000898  EC8D  F004         	call	_lcd_sendCommand
   554  00089C  0012               	return		;funcret
   555  00089E                     __end_of_lcd_init:
   556                           	opt stack 0
   557                           tblptru	equ	0xFF8
   558                           tblptrh	equ	0xFF7
   559                           tblptrl	equ	0xFF6
   560                           tablat	equ	0xFF5
   561                           postinc0	equ	0xFEE
   562                           wreg	equ	0xFE8
   563                           status	equ	0xFD8
   564                           
   565 ;; *************** function _lcd_sendCommand *****************
   566 ;; Defined at:
   567 ;;		line 3 in file "../../../mlcd/src/lcd_sendCommand.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;  command         1    wreg     unsigned char 
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  command         1    1[COMRAM] unsigned char 
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   581 ;;      Params:         0       0       0       0       0       0       0       0       0
   582 ;;      Locals:         1       0       0       0       0       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0       0       0       0       0
   584 ;;      Totals:         1       0       0       0       0       0       0       0       0
   585 ;;Total ram usage:        1 bytes
   586 ;; Hardware stack levels used:    1
   587 ;; Hardware stack levels required when called:    1
   588 ;; This function calls:
   589 ;;		_Delay1KTCYx
   590 ;; This function is called by:
   591 ;;		_main
   592 ;;		_lcd_init
   593 ;;		_lcd_sendChar
   594 ;;		_lcd_goto
   595 ;;		_lcd_sendStringXY
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text4
   600  00091A                     __ptext4:
   601                           	opt stack 0
   602  00091A                     _lcd_sendCommand:
   603                           	opt stack 27
   604                           
   605                           ;incstack = 0
   606                           ;lcd_sendCommand@command stored from wreg
   607  00091A  6E28               	movwf	lcd_sendCommand@command,c
   608                           
   609                           ;lcd_sendCommand.c: 6: LATEbits.LATE0 = 0;
   610  00091C  908D               	bcf	3981,0,c	;volatile
   611                           
   612                           ;lcd_sendCommand.c: 7: LATD = command;
   613  00091E  C028  FF8C         	movff	lcd_sendCommand@command,3980	;volatile
   614                           
   615                           ;lcd_sendCommand.c: 8: LATEbits.LATE1 = 1; __nop(); LATEbits.LATE1 = 0;;
   616  000922  828D               	bsf	3981,1,c	;volatile
   617  000924  F000               	nop	
   618  000926  928D               	bcf	3981,1,c	;volatile
   619                           
   620                           ;lcd_sendCommand.c: 9: Delay1KTCYx(16);
   621  000928  0E10               	movlw	16
   622  00092A  ECA3  F004         	call	_Delay1KTCYx
   623  00092E  0012               	return		;funcret
   624  000930                     __end_of_lcd_sendCommand:
   625                           	opt stack 0
   626                           tblptru	equ	0xFF8
   627                           tblptrh	equ	0xFF7
   628                           tblptrl	equ	0xFF6
   629                           tablat	equ	0xFF5
   630                           postinc0	equ	0xFEE
   631                           wreg	equ	0xFE8
   632                           status	equ	0xFD8
   633                           
   634 ;; *************** function _Delay1KTCYx *****************
   635 ;; Defined at:
   636 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\d1ktcyx.c"
   637 ;; Parameters:    Size  Location     Type
   638 ;;  unit            1    wreg     unsigned char 
   639 ;; Auto vars:     Size  Location     Type
   640 ;;  unit            1    0[COMRAM] unsigned char 
   641 ;; Return value:  Size  Location     Type
   642 ;;                  1    wreg      void 
   643 ;; Registers used:
   644 ;;		wreg
   645 ;; Tracked objects:
   646 ;;		On entry : 0/0
   647 ;;		On exit  : 0/0
   648 ;;		Unchanged: 0/0
   649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   650 ;;      Params:         0       0       0       0       0       0       0       0       0
   651 ;;      Locals:         1       0       0       0       0       0       0       0       0
   652 ;;      Temps:          0       0       0       0       0       0       0       0       0
   653 ;;      Totals:         1       0       0       0       0       0       0       0       0
   654 ;;Total ram usage:        1 bytes
   655 ;; Hardware stack levels used:    1
   656 ;; This function calls:
   657 ;;		Nothing
   658 ;; This function is called by:
   659 ;;		_main
   660 ;;		_lcd_init
   661 ;;		_lcd_sendChar
   662 ;;		_lcd_sendCommand
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	text5
   667  000946                     __ptext5:
   668                           	opt stack 0
   669  000946                     _Delay1KTCYx:
   670                           	opt stack 27
   671                           
   672                           ;incstack = 0
   673                           ;Delay1KTCYx@unit stored from wreg
   674  000946  6E27               	movwf	Delay1KTCYx@unit,c
   675  000948                     l323:
   676  000948  0EC8               	movlw	200
   677  00094A                     u207:
   678  00094A  D000               	nop2	
   679  00094C  2EE8               	decfsz	wreg,f,c
   680  00094E  D7FD               	bra	u207
   681  000950  2E27               	decfsz	Delay1KTCYx@unit,f,c
   682  000952  D7FA               	goto	l323
   683  000954  0012               	return	
   684  000956                     __end_of_Delay1KTCYx:
   685                           	opt stack 0
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           postinc0	equ	0xFEE
   691                           wreg	equ	0xFE8
   692                           status	equ	0xFD8
   693                           
   694 ;; *************** function _Delay10TCYx *****************
   695 ;; Defined at:
   696 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\d10tcyx.c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;  unit            1    wreg     unsigned char 
   699 ;; Auto vars:     Size  Location     Type
   700 ;;  unit            1    0[COMRAM] unsigned char 
   701 ;; Return value:  Size  Location     Type
   702 ;;                  1    wreg      void 
   703 ;; Registers used:
   704 ;;		wreg
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   710 ;;      Params:         0       0       0       0       0       0       0       0       0
   711 ;;      Locals:         1       0       0       0       0       0       0       0       0
   712 ;;      Temps:          0       0       0       0       0       0       0       0       0
   713 ;;      Totals:         1       0       0       0       0       0       0       0       0
   714 ;;Total ram usage:        1 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_lcd_init
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           	psect	text6
   724  000956                     __ptext6:
   725                           	opt stack 0
   726  000956                     _Delay10TCYx:
   727                           	opt stack 29
   728                           
   729                           ;incstack = 0
   730                           ;Delay10TCYx@unit stored from wreg
   731  000956  6E27               	movwf	Delay10TCYx@unit,c
   732  000958                     l316:
   733  000958  0E03               	movlw	3
   734  00095A                     u217:
   735  00095A  2EE8               	decfsz	wreg,f,c
   736  00095C  D7FE               	bra	u217
   737  00095E  F000               	nop	
   738  000960  2E27               	decfsz	Delay10TCYx@unit,f,c
   739  000962  D7FA               	goto	l316
   740  000964  0012               	return	
   741  000966                     __end_of_Delay10TCYx:
   742                           	opt stack 0
   743                           tblptru	equ	0xFF8
   744                           tblptrh	equ	0xFF7
   745                           tblptrl	equ	0xFF6
   746                           tablat	equ	0xFF5
   747                           postinc0	equ	0xFEE
   748                           wreg	equ	0xFE8
   749                           status	equ	0xFD8
   750                           
   751 ;; *************** function _Delay10KTCYx *****************
   752 ;; Defined at:
   753 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\pic18\d10ktcyx.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;  unit            1    wreg     unsigned char 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;  unit            1    1[COMRAM] unsigned char 
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg
   762 ;; Tracked objects:
   763 ;;		On entry : 0/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   767 ;;      Params:         0       0       0       0       0       0       0       0       0
   768 ;;      Locals:         1       0       0       0       0       0       0       0       0
   769 ;;      Temps:          1       0       0       0       0       0       0       0       0
   770 ;;      Totals:         2       0       0       0       0       0       0       0       0
   771 ;;Total ram usage:        2 bytes
   772 ;; Hardware stack levels used:    1
   773 ;; This function calls:
   774 ;;		Nothing
   775 ;; This function is called by:
   776 ;;		_lcd_init
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text7
   781  000930                     __ptext7:
   782                           	opt stack 0
   783  000930                     _Delay10KTCYx:
   784                           	opt stack 29
   785                           
   786                           ;incstack = 0
   787                           ;Delay10KTCYx@unit stored from wreg
   788  000930  6E28               	movwf	Delay10KTCYx@unit,c
   789  000932                     l309:
   790  000932  0E0D               	movlw	13
   791  000934  6E27               	movwf	??_Delay10KTCYx& (0+255),c
   792  000936  0EFC               	movlw	252
   793  000938                     u227:
   794  000938  2EE8               	decfsz	wreg,f,c
   795  00093A  D7FE               	bra	u227
   796  00093C  2E27               	decfsz	??_Delay10KTCYx& (0+255),f,c
   797  00093E  D7FC               	bra	u227
   798  000940  2E28               	decfsz	Delay10KTCYx@unit,f,c
   799  000942  D7F7               	goto	l309
   800  000944  0012               	return	
   801  000946                     __end_of_Delay10KTCYx:
   802                           	opt stack 0
   803                           tblptru	equ	0xFF8
   804                           tblptrh	equ	0xFF7
   805                           tblptrl	equ	0xFF6
   806                           tablat	equ	0xFF5
   807                           postinc0	equ	0xFEE
   808                           wreg	equ	0xFE8
   809                           status	equ	0xFD8
   810                           tblptru	equ	0xFF8
   811                           tblptrh	equ	0xFF7
   812                           tblptrl	equ	0xFF6
   813                           tablat	equ	0xFF5
   814                           postinc0	equ	0xFEE
   815                           wreg	equ	0xFE8
   816                           status	equ	0xFD8
   817                           
   818                           	psect	rparam
   819  0000                     tblptru	equ	0xFF8
   820                           tblptrh	equ	0xFF7
   821                           tblptrl	equ	0xFF6
   822                           tablat	equ	0xFF5
   823                           postinc0	equ	0xFEE
   824                           wreg	equ	0xFE8
   825                           status	equ	0xFD8


Data Sizes:
    Strings     13
    Constant    0
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5      44
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_sendString@str	PTR unsigned char  size(2) Largest target is 13
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_lcd_sendString
    _lcd_sendString->_lcd_sendChar
    _lcd_sendChar->_lcd_sendCommand
    _lcd_init->_Delay10KTCYx
    _lcd_init->_lcd_sendCommand
    _lcd_sendCommand->_Delay1KTCYx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     407
                        _Delay1KTCYx
                           _lcd_init
                    _lcd_sendCommand
                     _lcd_sendString
 ---------------------------------------------------------------------------------
 (1) _lcd_sendString                                       2     0      2     287
                                              3 COMRAM     2     0      2
                       _lcd_sendChar
 ---------------------------------------------------------------------------------
 (2) _lcd_sendChar                                         1     1      0      90
                                              2 COMRAM     1     1      0
                        _Delay1KTCYx
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      75
                       _Delay10KTCYx
                        _Delay10TCYx
                        _Delay1KTCYx
                    _lcd_sendCommand
 ---------------------------------------------------------------------------------
 (3) _lcd_sendCommand                                      1     1      0      30
                                              1 COMRAM     1     1      0
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10TCYx                                          1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay1KTCYx
   _lcd_init
     _Delay10KTCYx
     _Delay10TCYx
     _Delay1KTCYx
     _lcd_sendCommand
       _Delay1KTCYx
   _lcd_sendCommand
     _Delay1KTCYx
   _lcd_sendString
     _lcd_sendChar
       _Delay1KTCYx
       _lcd_sendCommand
         _Delay1KTCYx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       1       0        1.1%
COMRAM              5F      5      2C       1       46.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      2C      20        0.0%
DATA                 0      0      2C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Apr 15 18:50:35 2020

           ?_lcd_sendChar 0027                        l30 0840                        l31 0850  
                      l27 0826                        l28 083C                        l73 08B0  
                      l75 08C0                        l93 08EA                        l94 08D6  
         ?_lcd_sendString 002A          ?_lcd_sendCommand 0027                       l323 0948  
                     l316 0958                       l309 0932                       u207 094A  
                     u217 095A                       u227 0938              __CFG_BOR$OFF 000000  
                     wreg 000FE8              __CFG_WDT$OFF 000000                      STR_1 0801  
                    _LATD 000F8C                      _main 0810                      start 0000  
          ??_lcd_sendChar 0029             __CFG_MCLRE$ON 000000              ___param_bank 000000  
             _Delay10TCYx 0956               _Delay1KTCYx 0946             __CFG_PLLDIV$2 000000  
                   ?_main 0027                     _TRISD 000F95     __size_of_Delay10KTCYx 0016  
                   main@a 0161                     main@b 0160            __pbitbssCOMRAM 0160  
                   tablat 000FF5                     status 000FD8           __initialization 08FE  
            __end_of_main 0858              _Delay10KTCYx 0930                    ??_main 002C  
           __activetblptr 000001                    _ADCON1 000FC1    lcd_sendCommand@command 0028  
        __end_of_lcd_init 089E          lcd_sendChar@data 0029                    clear_0 0906  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8      __end_of_lcd_sendChar 08D4                __accesstop 0060  
 __end_of__initialization 090C             ___rparam_used 000001            __pcstackCOMRAM 0027  
        ??_lcd_sendString 002C              ?_Delay10TCYx 0027              ?_Delay1KTCYx 0027  
__size_of_lcd_sendCommand 0016                 ?_lcd_init 0027                   __Hparam 0000  
                 __Lparam 0000              __psmallconst 0800                   __pcinit 08FE  
         Delay10TCYx@unit 0027                   __ramtop 0800                   __ptext0 0810  
                 __ptext1 08D4                   __ptext2 089E                   __ptext3 0858  
                 __ptext4 091A                   __ptext5 0946                   __ptext6 0956  
                 __ptext7 0930     __size_of_lcd_sendChar 0036                ??_lcd_init 0029  
    end_of_initialization 090C              _lcd_sendChar 089E                   postinc0 000FEE  
               _PORTBbits 000F81                 _TRISBbits 000F93                 _TRISEbits 000F96  
       ??_lcd_sendCommand 0028      __size_of_Delay10TCYx 0010      __size_of_Delay1KTCYx 0010  
     start_initialization 08FE               __pbssCOMRAM 0001         lcd_sendString@str 002A  
         Delay1KTCYx@unit 0027         __size_of_lcd_init 0046             ?_Delay10KTCYx 0027  
               _buffer_RX 0001               __smallconst 0800   __size_of_lcd_sendString 002A  
                _LATBbits 000F8A                  _LATEbits 000F8D            ??_Delay10KTCYx 0027  
        Delay10KTCYx@unit 0028           _lcd_sendCommand 091A                  __Hrparam 0000  
                __Lrparam 0000              __Lsmallconst 0800                  _lcd_init 0858  
           __size_of_main 0048             ??_Delay10TCYx 0027             ??_Delay1KTCYx 0027  
 __end_of_lcd_sendCommand 0930     __CFG_CPUDIV$OSC2_PLL3 000000            _lcd_sendString 08D4  
    __end_of_Delay10KTCYx 0946    __end_of_lcd_sendString 08FE       __end_of_Delay10TCYx 0966  
     __end_of_Delay1KTCYx 0956        __CFG_FOSC$HSPLL_HS 000000  
